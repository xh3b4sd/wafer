// Package trader provides the interface which has to be implemented to
// participate on some market to increase revenue. Trader might buy and sell
// bitcoins, ether, or stock market shares.
package trader

// Stats contains information about the trader, its actions, and its results.
type Stats struct {
	// Revenue is the amount of money generated by the trader. Depending on the
	// performance of the underlying algorithm, this may be negative.
	Revenue float64
	// Cycles is the number of buy and sell iterations. After one buy must come
	// one sell.
	Cycles int64
}

// Trader participates on some market to increase revenue. Depending on the
// performance of the underlying algorithm, this may not happen.
type Trader interface {
	// Buy pays some amount of currency to own some commodity at a certain price.
	Buy() error
	// Sell receives some amount of currency by disposing some commodity at a
	// certain price.
	Sell() error
	// Stats returns a copy of the current statistical information about the
	// current trader process.
	Stats() Stats
}
